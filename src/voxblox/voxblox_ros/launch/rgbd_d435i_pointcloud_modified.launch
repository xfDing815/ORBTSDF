<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="robot_name" default="d435i" />
  <arg name="voxel_size" default="0.005" />
  <arg name="voxels_per_side" default="16" />
  <arg name="world_frame" default="world" />

  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="nodelet" type="nodelet" name="point_cloud_pass_through" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/camera/depth/color/points" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.01
      filter_limit_max: 1.0
      filter_limit_negative: False
    </rosparam>
  </node>

  <node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" output="screen" args="--alsologtostderr" clear_params="true">
    <remap from="pointcloud" to="/point_cloud_pass_through/output"/>
    <remap from="voxblox_node/esdf_map_out" to="esdf_map" />
    <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
    <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
    <param name="color_mode" value="color" />
    <param name="voxel_carving_enabled" value="true" />
    <param name="publish_esdf_map" value="true" />
    <param name="update_mesh_every_n_sec" value="1" />
    <param name="min_time_between_msgs_sec" value="0.1" />
    <param name="verbose" value="true" />
    <param name="use_tf_transforms" value="false" />
    <param name="method" value="fast" />
    <param name="use_const_weight" value="false" />
    <remap from="transform" to="/orb_slam_2_ros_node/transform_cam" />
    <param name="world_frame" value="$(arg world_frame)" />
    <rosparam file="$(find voxblox_ros)/cfg/d435i.yaml"/>
    <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/d435i2.ply" />
  </node>
</launch>
